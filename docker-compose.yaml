services:
    backend:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8000:8000"
        volumes:
            - .:/app
        environment:
            - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
            - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_SSL}
        env_file:
            - .docker.env
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: unless-stopped
    db:
        image: postgres:16.8-alpine
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
            interval: 5s
            timeout: 5s
            retries: 5
        ports:
            - "5432:5432"  # Только для разработки
        restart: unless-stopped
    redis:
        image: redis:7-alpine
        volumes:
            - redis_data:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 3s
            retries: 5
        ports:
            - "6379:6379"
        restart: unless-stopped

volumes:
    postgres_data:
    redis_data: